// src/app/api/plans/route.ts
import { NextResponse } from 'next/server';
import { db } from "@/services/lib/db";
import { PlanStatus } from "@prisma/client";

// GET /api/plans - Listar todos os planos disponÃ­veis
export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const status = searchParams.get("status") as PlanStatus | null;
    
    // Construir filtros para a query
    const where: any = {};
    
    // Filtrar por status se fornecido
    if (status) {
      where.status = status;
    }
    
    const plans = await db.plan.findMany({
      where,
      include: {
        features: true,
      },
      orderBy: {
        price: "asc",
      },
    });
    
    return NextResponse.json(plans);
  } catch (error) {
    console.error("Error fetching plans:", error);
    return NextResponse.json({ error: "Falha ao buscar planos" }, { status: 500 });
  }
}

// export async function GET() {
//   try {
//     const plans = await db.plan.findMany({
//       where: { status: 'ACTIVE' },
//       include: { features: true },
//     });
//     return NextResponse.json(plans);
//   } catch (error) {
//     return NextResponse.json({ error: 'Failed to fetch plans' }, { status: 500 });
//   }
// }

export async function POST(request: Request) {
  try {
    const data = await request.json();
    const plan = await db.plan.create({
      data: {
        name: data.name,
        price: data.price,
        period: data.period,
        description: data.description,
        isPopular: data.isPopular || false,
        status: data.status || 'ACTIVE',
        features: {
          create: data.features?.map((feature: string) => ({
            name: feature,
            included: true,
          })) || [],
        },
      },
    });
    return NextResponse.json(plan);
  } catch (error) {
    return NextResponse.json({ error: 'Failed to create plan' }, { status: 500 });
  }
}

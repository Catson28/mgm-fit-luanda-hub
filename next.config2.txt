import withPWA from 'next-pwa';
import { CacheFirst, StaleWhileRevalidate } from 'workbox-strategies';

const pwaConfig = {
    dest: 'public',
    register: true,
    skipWaiting: true,
    runtimeCaching: [
      {
        urlPattern: /^https:\/\/fonts\.(googleapis|gstatic)\.com\/.*/i,
        handler: CacheFirst,
        options: {
          cacheName: 'google-fonts',
          expiration: {
            maxEntries: 4,
            maxAgeSeconds: 365 * 24 * 60 * 60, // Cache por 1 ano
          },
        },
      },
      {
        urlPattern: /\.(?:png|jpg|jpeg|svg|gif|webp|ico|woff2?)$/i,
        handler: CacheFirst,
        options: {
          cacheName: 'static-assets',
          expiration: {
            maxEntries: 100,
            maxAgeSeconds: 60 * 60 * 24 * 30, // Cache por 30 dias
          },
        },
      },
      {
        urlPattern: /^https:\/\/cdn\.jsdelivr\.net\/.*/i,
        handler: StaleWhileRevalidate,
        options: {
          cacheName: 'jsdelivr-cdn',
          expiration: {
            maxEntries: 10,
            maxAgeSeconds: 60 * 60 * 24 * 7, // Cache por 7 dias
          },
        },
      },
    ],
    disable: process.env.NODE_ENV === 'development',
};

const nextConfig = {
    images: {
        domains: ['localhost', 'res.cloudinary.com', 'tyulaerp.vercel.app', 'images.unsplash.com'],
    },
    // typescript: {
    //     ignoreBuildErrors: true, // Ignora erros do TypeScript no build
    // },
    // eslint: {
    //   ignoreDuringBuilds: true, // Ignora o lint no build
    // },
    reactStrictMode: true,
    ...withPWA(pwaConfig)
};

export default nextConfig;